**Create a new project on your local machine then push it to your remote repo.
$ git init
$ git add .
$ git commit -m "add file"
$ git remote add origin git@github.com:NouranElshaer/lab2.git
$ git push origin master

**create two branches (dev and test) then create two files in dev branch and push this changes to remote repo.
$ git branch dev
$ git branch test
$ git checkout dev
$ touch file1.txt
$ touch file2.txt
$ git add -A
$ git commit -a -m ""
$ git push origin dev

**merge this changes on main branch and then push it to your remote main branch
$ git checkout master
$ git merge dev
$ git push origin master

**Tell me how to remove them locally and remotly
$ git checkout master
Local=>
 git branch -d test
Remot=>
 git push origin --delete test

**Send me invitation on my mail
rebo link => https://github.com/mohamedmagdycivily/lab2
myMail => mohamedmagdycivily@gmail.com

**create an annoted tag with tagname v1.4.
$ git log --oneline
$ git tag -a v1.4 420383d -m "tag added by mohamed magdy"
$ git push origin v1.4

**tell me how to list tags locally.
$ git tag

**tell me how to delete tag locally and remotely
Local=>
$ git tag -d v1.4
Remot=>
$ git push --delete origin v1.4

**pull request
$ git checkout -b newbranch
$ git add .
$ git commit -m "task 9 modification"
$ git push origin newbranch
_______________________________________________________

Git Rebase:

Rebasing is a process to reapply commits on top of another base trip. It is used to apply a sequence of commits from distinct branches into a final commit. It is an alternative of git merge command. It is a linear process of merging.

In Git, the term rebase is referred to as the process of moving or combining a sequence of commits to a new base commit. Rebasing is very beneficial and it visualized the process in the environment of a feature branching workflow.


Generally, it is an alternative of git merge command. Merge is always a forward changing record. Comparatively, rebase is a compelling history rewriting tool in git. It merges the different commits one by one.

ex:

Suppose you have made three commits in your master branch and three in your other branch named test. If you merge this, then it will merge all commits in a time. But if you rebase it, then it will be merged in a linear manner
